from typing import Protocol, runtime_checkable, Iterable, Callable, TypeVar

@runtime_checkable
class VLMProtocol[T_State, T_Input, T_Output](Protocol):
    @property
    def initial_state(self,) -> T_State: ...
    @property
    def data_stream(self,) -> Iterable[T_Input]: ...
    @property
    def inference(self,) -> Callable[[T_State, T_Input], T_State]: ...
    @property
    def consume(self,) -> Callable[[T_State],T_Output]: ...
